{"version":3,"file":"default-node_modules_primeng_fesm2020_primeng-checkbox_mjs.js","mappings":"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","sources":["./node_modules/primeng/fesm2020/primeng-checkbox.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ObjectUtils } from 'primeng/utils';\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Checkbox),\n    multi: true\n};\nclass Checkbox {\n    constructor(cd) {\n        this.cd = cd;\n        this.checkboxIcon = 'pi pi-check';\n        this.trueValue = true;\n        this.falseValue = false;\n        this.onChange = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.focused = false;\n    }\n    onClick(event, checkbox, focus) {\n        event.preventDefault();\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.updateModel(event);\n        if (focus) {\n            checkbox.focus();\n        }\n    }\n    updateModel(event) {\n        let newModelValue;\n        if (!this.binary) {\n            if (this.checked())\n                newModelValue = this.model.filter((val) => !ObjectUtils.equals(val, this.value));\n            else\n                newModelValue = this.model ? [...this.model, this.value] : [this.value];\n            this.onModelChange(newModelValue);\n            this.model = newModelValue;\n            if (this.formControl) {\n                this.formControl.setValue(newModelValue);\n            }\n        }\n        else {\n            newModelValue = this.checked() ? this.falseValue : this.trueValue;\n            this.model = newModelValue;\n            this.onModelChange(newModelValue);\n        }\n        this.onChange.emit({ checked: newModelValue, originalEvent: event });\n    }\n    handleChange(event) {\n        if (!this.readonly) {\n            this.updateModel(event);\n        }\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n        this.onModelTouched();\n    }\n    focus() {\n        this.inputViewChild.nativeElement.focus();\n    }\n    writeValue(model) {\n        this.model = model;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    checked() {\n        return this.binary ? this.model === this.trueValue : ObjectUtils.contains(this.value, this.model);\n    }\n}\nCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: Checkbox, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.2\", type: Checkbox, selector: \"p-checkbox\", inputs: { value: \"value\", name: \"name\", disabled: \"disabled\", binary: \"binary\", label: \"label\", ariaLabelledBy: \"ariaLabelledBy\", ariaLabel: \"ariaLabel\", tabindex: \"tabindex\", inputId: \"inputId\", style: \"style\", styleClass: \"styleClass\", labelStyleClass: \"labelStyleClass\", formControl: \"formControl\", checkboxIcon: \"checkboxIcon\", readonly: \"readonly\", required: \"required\", trueValue: \"trueValue\", falseValue: \"falseValue\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [CHECKBOX_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"inputViewChild\", first: true, predicate: [\"cb\"], descendants: true }], ngImport: i0, template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{ 'p-checkbox p-component': true, 'p-checkbox-checked': checked(), 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused }\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input\n                    #cb\n                    type=\"checkbox\"\n                    [attr.id]=\"inputId\"\n                    [attr.name]=\"name\"\n                    [readonly]=\"readonly\"\n                    [value]=\"value\"\n                    [checked]=\"checked()\"\n                    (focus)=\"onFocus()\"\n                    (blur)=\"onBlur()\"\n                    (change)=\"handleChange($event)\"\n                    [disabled]=\"disabled\"\n                    [attr.tabindex]=\"tabindex\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-checked]=\"checked()\"\n                    [attr.required]=\"required\"\n                />\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event, cb, true)\" [ngClass]=\"{ 'p-highlight': checked(), 'p-disabled': disabled, 'p-focus': focused }\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked() ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label\n            (click)=\"onClick($event, cb, true)\"\n            [class]=\"labelStyleClass\"\n            [ngClass]=\"{ 'p-checkbox-label': true, 'p-checkbox-label-active': checked(), 'p-disabled': disabled, 'p-checkbox-label-focus': focused }\"\n            *ngIf=\"label\"\n            [attr.for]=\"inputId\"\n            >{{ label }}</label\n        >\n    `, isInline: true, styles: [\".p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: Checkbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-checkbox', template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{ 'p-checkbox p-component': true, 'p-checkbox-checked': checked(), 'p-checkbox-disabled': disabled, 'p-checkbox-focused': focused }\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input\n                    #cb\n                    type=\"checkbox\"\n                    [attr.id]=\"inputId\"\n                    [attr.name]=\"name\"\n                    [readonly]=\"readonly\"\n                    [value]=\"value\"\n                    [checked]=\"checked()\"\n                    (focus)=\"onFocus()\"\n                    (blur)=\"onBlur()\"\n                    (change)=\"handleChange($event)\"\n                    [disabled]=\"disabled\"\n                    [attr.tabindex]=\"tabindex\"\n                    [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    [attr.aria-label]=\"ariaLabel\"\n                    [attr.aria-checked]=\"checked()\"\n                    [attr.required]=\"required\"\n                />\n            </div>\n            <div class=\"p-checkbox-box\" (click)=\"onClick($event, cb, true)\" [ngClass]=\"{ 'p-highlight': checked(), 'p-disabled': disabled, 'p-focus': focused }\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"checked() ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label\n            (click)=\"onClick($event, cb, true)\"\n            [class]=\"labelStyleClass\"\n            [ngClass]=\"{ 'p-checkbox-label': true, 'p-checkbox-label-active': checked(), 'p-disabled': disabled, 'p-checkbox-label-focus': focused }\"\n            *ngIf=\"label\"\n            [attr.for]=\"inputId\"\n            >{{ label }}</label\n        >\n    `, providers: [CHECKBOX_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], binary: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], labelStyleClass: [{\n                type: Input\n            }], formControl: [{\n                type: Input\n            }], checkboxIcon: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], trueValue: [{\n                type: Input\n            }], falseValue: [{\n                type: Input\n            }], inputViewChild: [{\n                type: ViewChild,\n                args: ['cb']\n            }], onChange: [{\n                type: Output\n            }] } });\nclass CheckboxModule {\n}\nCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: CheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.2\", ngImport: i0, type: CheckboxModule, declarations: [Checkbox], imports: [CommonModule], exports: [Checkbox] });\nCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: CheckboxModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: CheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Checkbox],\n                    declarations: [Checkbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule };\n//# sourceMappingURL=primeng-checkbox.mjs.map\n"],"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","Output","NgModule","NG_VALUE_ACCESSOR","ObjectUtils","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","Checkbox","multi","constructor","cd","checkboxIcon","trueValue","falseValue","onChange","onModelChange","onModelTouched","focused","onClick","event","checkbox","focus","preventDefault","disabled","readonly","updateModel","newModelValue","binary","checked","model","filter","val","equals","value","formControl","setValue","emit","originalEvent","handleChange","onFocus","onBlur","inputViewChild","nativeElement","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","contains","ɵfac","ChangeDetectorRef","ɵcmp","NgClass","NgIf","NgStyle","type","args","selector","template","providers","changeDetection","OnPush","encapsulation","None","host","class","styles","name","label","ariaLabelledBy","ariaLabel","tabindex","inputId","style","styleClass","labelStyleClass","required","CheckboxModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}